// Mocks generated by Mockito 5.2.0 from annotations
// in toxicity_checker/test/widget_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:openfoodfacts/openfoodfacts.dart' as _i2;
import 'package:toxicity_checker/open_food_client.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeProductResult_0 extends _i1.Fake implements _i2.ProductResult {}

/// A class which mocks [OpenFoodClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockOpenFoodClient extends _i1.Mock implements _i3.OpenFoodClient {
  MockOpenFoodClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.ProductResult> getProduct(String? barCode) =>
      (super.noSuchMethod(Invocation.method(#getProduct, [barCode]),
              returnValue:
                  Future<_i2.ProductResult>.value(_FakeProductResult_0()))
          as _i4.Future<_i2.ProductResult>);
}
